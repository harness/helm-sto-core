---
# Source: sto-core/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-sto-core
  namespace: default
  labels:
    helm.sh/chart: sto-core-0.1.0
    app.kubernetes.io/name: sto-core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: sto-core/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sto-core
  namespace: default
data:
  APP_ENABLE_UI: "true"
  APP_ACL_URL: 'http://test//authz/api'
  APP_TOKEN_JWT_SECRET: "HVSKUYqD4e5Rxu12hFDdCJKGM64sxgEynvdDhaOHaTHhwwn0K4Ttr0uoOxSsEVYNrUU="
  APP_INTERNAL_TOKEN_JWT_SECRET: "dOkdsVqdRPPRJG31XU0qY4MPqmBBMk0PTAGIKM6O7TGqhjyxScIdJe80mwh5Yb5zF3KxYBHw6B3Lfzlq"
  APP_HARNESS_TOKEN: "token"
  APP_NG_URL: 'http://test/'
  APP_AUDIT_JWT_SECRET: test
---
# Source: sto-core/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sto-core
  namespace: default
  labels:
    helm.sh/chart: sto-core-0.1.0
    app.kubernetes.io/name: sto-core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 4000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sto-core
    app.kubernetes.io/instance: release-name
---
# Source: sto-core/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sto-core
  namespace: default
  labels:
    helm.sh/chart: sto-core-0.1.0
    app.kubernetes.io/name: sto-core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: sto-core
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sto-core
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-sto-core
      securityContext:
        {}
      initContainers:
        - name: check-for-postgres
          image: registry.dso.mil/platform-one/big-bang/apps/third-party/harness/busybox:1.33.1
          command: ["sh","-c"]
          args: ['while ! nc -z postgres:5432 2>/dev/null; do let elapsed=elapsed+1; if [ "$elapsed" -gt 90 ]; then echo "waiting"; exit 1; fi; sleep 1; done; echo "postgres is ready" ']
      containers:
        - name: sto-core
          securityContext:
            {}
          image: harness/stocore-signed:v2-alpha15
          imagePullPolicy: IfNotPresent
          env:
          - name: APP_HARNESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: harness-secrets
                key: stoAppHarnessToken
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres
                key: postgres-password
          - name: APP_DATABASE_DATASOURCE
            value: "postgres://postgres:$(DB_PASSWORD)@postgres:5432"
          - name: APP_DB_MIGRATION_DATASOURCE
            value: "postgres://postgres:$(DB_PASSWORD)@postgres:5432"
          envFrom:
          - configMapRef:
              name: sto-core
          ports:
            - name: http
              containerPort: 4000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/v2/system/health
              port: http
            initialDelaySeconds: 3
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v2/system/health
              port: http
            initialDelaySeconds: 3
            periodSeconds: 30
          resources:
            requests:
              cpu: 500m
              memory: 500Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - sto-core
            topologyKey: "kubernetes.io/hostname"
---
# Source: sto-core/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: sto-core
  namespace: default
  labels:
    helm.sh/chart: sto-core-0.1.0
    app.kubernetes.io/name: sto-core
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sto-core
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage : 80
